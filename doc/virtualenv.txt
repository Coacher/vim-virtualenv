*virtualenv.txt*        Better Python virtual environments support for Vim.

==============================================================================
INTRODUCTION                                *virtualenv*

*vim-virtualenv* provides a simple way to activate and deactivate Python
virtual environments from a Vim session. It requires |if_pyth|.

==============================================================================
COMMANDS                                    *virtualenv-commands*

:VirtualEnvList [path]                      *:VirtualEnvList*
    List virtualenvs located inside the "path" directory.
    If "path" is not specified, then |g:virtualenv#directory| value is used.

:VirtualEnvActivate [name]                  *:VirtualEnvActivate*
    Activate the "name" virtualenv located inside |g:virtualenv#directory|.
    Alternatively "name" can be an absolute or a relative path to the
    virtualenv directory, in the latter case it is first expanded against
    |g:virtualenv#directory| and then against the current directory.

    If "name" is not specified, vim-virtualenv searches from the directory
    of the current file upwards until it finds a virtualenv.

:VirtualEnvCD                               *:VirtualEnvCD*
    Change the current directory to the current virtualenv directory.

:VirtualEnvDeactivate                       *:VirtualEnvDeactivate*
    Deactivate the current virtualenv.

==============================================================================
STATUSLINE                                  *virtualenv-statusline*

Current virtualenv name can be shown in the 'statusline', or in any other
place, by calling the virtualenv#statusline() function. The output is
controlled by the |g:virtualenv#statusline_format| variable.

==============================================================================
CONFIGURATION                               *virtualenv-configuration*

g:virtualenv#directory                      *g:virtualenv#directory*
    This variable appoints the directory that holds virtualenvs.

    If $WORKON_HOME environment variable is set, it is used as default value.
    Otherwise, default value is '~/.virtualenvs'.

    Example: >
        let g:virtualenv#directory = '/path/to/virtualenvs'
<
g:virtualenv#auto_activate                  *g:virtualenv#auto_activate*
    This variable controls whether vim-virtualenv should attempt to determine
    and activate a virtualenv based on the current file path on file open when
    the directory of the current file is inside |g:virtualenv#directory|.

    Default value is 1.

                                    *g:virtualenv#auto_activate_everywhere*
g:virtualenv#auto_activate_everywhere
    This variable controls whether vim-virtualenv should always attempt to
    determine and activate a virtualenv based on the current file path on file
    open.

    Note: This variable overrides |g:virtualenv#auto_activate|.

    Default value is 0.

                                    *g:virtualenv#cdvirtualenv_on_activate*
g:virtualenv#cdvirtualenv_on_activate
    This variable controls whether vim-virtualenv should change the current
    directory to the virtualenv directory on activation.

    Default value is 1.

                                        *g:virtualenv#return_on_deactivate*
g:virtualenv#return_on_deactivate
    This variable controls whether vim-virtualenv should restore the current
    directory to its original value on virtualenv deactivation.

    Default value is 1.

g:virtualenv#statusline_format              *g:virtualenv#statusline_format*
    This variable sets the format string for the virtualenv#statusline()
    function output. Any '%n' flag will be replaced with the current
    virtualenv name.

    Default value is '%n'.

    Example: >
        let g:virtualenv#statusline_format = '[%n]'
<
                                        *g:virtualenv#force_python_version*
g:virtualenv#force_python_version
    This variable forces vim-virtualenv to use the specified version of the
    |python| command and skip the Python version check for the virtualenv.
    Accepted values are '2' and '3' for |:python| and |:python3| commands,
    respectively.

    Undefined by default.

g:virtualenv#debug                          *g:virtualenv#debug*
    This variable controls whether vim-virtualenv should print warning
    messages.

    Default value is 0.

==============================================================================
ABOUT                                       *virtualenv-about*

Author:     Ilya Tumaykin <itumaykin(at)gmail(dot)com>
Original author:    Jeremy Cantrell <jmcantrell@gmail.com>

Find the latest version of vim-virtualenv at:

https://github.com/Coacher/vim-virtualenv

Original version can be found at:

https://github.com/jmcantrell/vim-virtualenv

==============================================================================
LICENSE                                     *virtualenv-license*

vim-virtualenv is released under the Vim License.
See |license|.

vim:tw=78:sw=4:et:ft=help:norl:
