*virtualenv.txt*        Better Python virtual environments support for Vim.

==============================================================================
INTRODUCTION                                *virtualenv*

*vim-virtualenv* provides a simple way to activate and deactivate
Python virtual environments from a Vim session. It requires |if_pyth|.

==============================================================================
COMMANDS                                    *virtualenv-commands*

:VirtualEnvList [path]                      *:VirtualEnvList*
    List virtualenvs located inside the "path" directory.
    If "path" is not specified, then |g:virtualenv_directory| value is used.

:VirtualEnvActivate [name]                  *:VirtualEnvActivate*
    Activate the "name" virtualenv located inside |g:virtualenv_directory|.
    Alternatively "name" can be an absolute or a relative path
    to the virtualenv directory, in the latter case it is first expanded
    against |g:virtualenv_directory| and then against the current directory.

    If "name" is not specified, it will be guessed based on
    the current filename.

:VirtualEnvCdvirtualenv                     *:VirtualEnvCdvirtualenv*
    Change the current directory to the current virtualenv directory.

:VirtualEnvDeactivate                       *:VirtualEnvDeactivate*
    Deactivate the current virtualenv.

==============================================================================
STATUSLINE                                  *virtualenv-statusline*

You can show the current virtualenv name in the 'statusline',
or in any other place that you want to, by calling the virtualenv#statusline()
function. The output is controlled by the |g:virtualenv_stl_format| variable.

==============================================================================
CONFIGURATION                               *virtualenv-configuration*

g:virtualenv_loaded                         *g:virtualenv_loaded*
    If this variable is set, vim-virtualenv is not loaded on Vim start.

g:virtualenv_directory                      *g:virtualenv_directory*
    This variable appoints the directory that holds virtualenvs.

    If $WORKON_HOME environment variable is set, it is used as default value.
    Otherwise, default value is '~/.virtualenvs'.

    Example: >
        let g:virtualenv_directory = '/path/to/virtualenvs'
<
g:virtualenv_auto_activate                  *g:virtualenv_auto_activate*
    This variable controls whether vim-virtualenv attempts to determine
    and activate a virtualenv based on the current filename on file open.

    Default value is 1.

                                    *g:virtualenv_cdvirtualenv_on_activate*
g:virtualenv_cdvirtualenv_on_activate
    This variable controls whether vim-virtualenv changes the current
    directory to the virtualenv directory on activation.

    Default value is 1.

                                *g:virtualenv_force_cdvirtualenv_on_activate*
g:virtualenv_force_cdvirtualenv_on_activate
    This variable controls whether vim-virtualenv changes the current
    directory to the virtualenv directory on activation
    even if the current directory is already inside the virtualenv.

    Default value is 0.

                                        *g:virtualenv_force_python_version*
g:virtualenv_force_python_version
    This variable forces vim-virtualenv to use the specified version
    of |python| command and skip Python version check for the virtualenv.
    Accepted values are '2' and '3' for |:python| and |:python3| commands,
    respectively.

    Undefined by default.

                                        *g:virtualenv_return_on_deactivate*
g:virtualenv_return_on_deactivate
    This variable controls whether vim-virtualenv restores the current
    directory to its original value on virtualenv deactivation.

    Default value is 1.

g:virtualenv_stl_format                     *g:virtualenv_stl_format*
    This variable sets the format string for virtualenv#statusline() function
    output. Any '%n' flag will be replaced with the current virtualenv name.

    Default value is '%n'.

    Example: >
        let g:virtualenv_stl_format = '[%n]'
<
g:virtualenv_debug                          *g:virtualenv_debug*
    This variable controls whether vim-virtualenv prints warning messages.

    Default value is 0.

==============================================================================
ABOUT                                       *virtualenv-about*

Author:     Ilya Tumaykin <itumaykin(at)gmail(dot)com>
Original author:    Jeremy Cantrell <jmcantrell@gmail.com>

Find the latest version of vim-virtualenv at:

https://github.com/Coacher/vim-virtualenv

Original version can be found at:

https://github.com/jmcantrell/vim-virtualenv

==============================================================================
LICENSE                                     *virtualenv-license*

vim-virtualenv is released under Vim License.
See |license|.

vim:tw=78:sw=4:et:ft=help:norl:
